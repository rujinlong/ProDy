ProDy 1.10 Series
===============================================================================

.. contents::
   :local:

1.10.11 (Oct 25, 2019)
------------------------------------------------------------------------------

**New Features**:
  
  * Added :func:`.calcDynamicFlexiblityIndex`.
  
  * Added "related_entries" to PDB header.

  * Enabled :class:`.RTB` to take a customized Hessian as input.

  * Added numEntries to :class:`.NMA`, :class:`.Mode`, and :class:`.ModeSet` objects.

**Bug Fixes and Improvements**:

  * Added a keyword argument to :func:`.mapChainByChain` to allow user-defined 
  correspondence of chain IDs between the target and the mobile.
  
  * Compatibility and bug fixes for various functions.

  * Fixed compilation error on MacOS if a user-installed gcc is present.

  * Consistency fixes.

  * Added new modules and functions for handling angles, dihedrals, impropers, 
  cross-terms, non-bonded exclusions, hydrogen bond donor and acceptor information 
  from :file:`PSF` files and including them in :class:`.AtomGroup`.

1.10.10 (May 9, 2019)
------------------------------------------------------------------------------

**Bug Fixes and Improvements**:
  
  * Compatibility fix for the RTB module on Windows.

  * Fixed compilation error on MacOS.

  * Consistency fixes.

1.10.9 (May 2, 2019)
------------------------------------------------------------------------------

**New Features**:

  * Added a *method* option to :func:`.pairModes` to use other solvers for the 
  linear assignment problem.

  * Added functions for handling user-defined data for :class:`Ensemble` and 
  :class:`PDBEnsemble` 

  * Added the *reweight* option to :class:`.ModeEnsemble` to reweight the modes 
  based on matched eigenvalues.

  * :func:`.showSqFlucts` now plot color-coded square fluctuations using 
  domain information.

  * Added :func:`.calcSquareInnerProduct` for calculating the square inner 
  product between two square fluctuations.

  * Allowed :func:`.parseHiC` to automatically identify and read bindary hic files.

**Bug Fixes and Improvements**:
  
  * Fixes to :func:`.parsePDB` for compatibility with large PDB files.

  * Fixes and improvements to membrane ANM functions for faster computation.

  * PY3K compatibility fixes.

1.10.8 (Sept 18, 2018)
------------------------------------------------------------------------------

**New Features**:

  * Added *turbo* option to :func:`.calcEnsembleSpectralOverlaps` and 
  :func:`.matchModes`. Both options allow speed-up about 40%.

**Bug Fixes and Improvements**:

  * :func:`.writePDB` now can accept :class:`.Ensemble` as input.
  
  * PY3K compatibility fixes.

1.10.7 (May 21, 2018)
------------------------------------------------------------------------------

**New Features**:

  * Added *overlay* and *gap* option to :func:`.showAtomicLines`.

**Bug Fixes and Improvements**:

  * Reorganized MechStiff functions. Now MechStiff functions are moved out from 
  the :class:`.ANM` class, and `get...` were renamed to `calc...`

  * Fixed a problem that an error will be raised when searching a sequence 
  against *Pfam*.
  
  * PY3K compatibility fixes.

1.10.4 (May 15, 2018)
------------------------------------------------------------------------------

  * Minor fixes.

1.10.3 (May 14, 2018)
------------------------------------------------------------------------------

**New Features**:

  * Added :class:`.CATHDB` for querying information from CATH database.

  * Added :func:`.sliceAtomicData` and :func:`.extendAtomicData` to slice more 
    extend data based on :class:`.Selection` or other types of :class:`.Atomic` 
    objects.

**Bug Fixes and Improvements**:

  * Switched to Python Wheel for distributing on Windows. This will allow 
    Windows users to `pip install prody`.

  * Fixed a error when compiling C++ extensions on MacOS.

  * Various bug fixes according to issues proposed on the GitHub.

1.10.2 (May 2, 2018)
------------------------------------------------------------------------------

  * Minor fixes.

1.10.1 (May 1, 2018)
------------------------------------------------------------------------------

  * Added the function sliceAtomicData for slicing data based on slicing atoms.
  
  * Updated the documentation for making a release.

  * Other documentation and minor fixes.

1.10 (Apr 30, 2018)
------------------------------------------------------------------------------

Signature Dynamics
^^^^^^^^^^^^^^^^^^

  * Added :func:`.calcEnsembleENMs` to compute ENMs on each conformation of a 
    given ensemble to obtain an ensemble of modes.

  * Added :class:`.ModeEnsemble` and :class:`.sdarray` classes as the basic 
    data types for signature dynamics.

  * Added functions such as :func:`.calcSignatureSqFlucts`, 
    :func:`.calcSignatureCrossCorr`, :func:`.calcSignatureFractVariance` to 
    extract signature dynamics.

  * Added :func:`.calcEnsembleSpectralOverlaps` to obtain dynamical 
    overlaps/distances among the conformations in a given ensemble.


**New Features**:

*Visualization*

  * Added :func:`.showAtomicLines` and :func:`.showAtomicMatrix` functions to 
    improve visualization.

  * Added an *networkx* option to :func:`.showTree` so that the user can choose 
    to use :mod:`~networkx` to visualize a given tree.


*Ensemble and PDBEnsemble*

  * Associated an :class:`.MSA` object to the :class:`.PDBEnsemble` class.

  * Added an *pairwise* option to :meth:`.Ensemble.getRMSDs` to obtain an 
    RMSD table of every pair of conformations in the ensemble.

  * Improved :meth:`.Ensemble.setAtoms` for selecting a subset of 
    residues/atoms of the ensemble.

*Databases and Web Services*

  * Added methods and classes for obtaining data from *CATH* and *Dali*.
  
  * Added additional functions for *Uniprot* and *Pfam* such as 
    :func:`.queryUniprot` and :func:`.parsePfamPDBs`.

**Bug Fixes and Improvements**:

  * Fixed compatibility problems for Python 2 and 3.

  * Improved the :func:`.saveModel` function to include class-specific features.

  * Fixed a bug related to the :class:`.Atomgroup` addition method.

  * Bug fixes to :class:`.NMA` classes.

  * Fixed a problem with :class:`.MSA` indexing.

  * Reorganized file structures and functions for consistency. 

  * Other bug fixes.
